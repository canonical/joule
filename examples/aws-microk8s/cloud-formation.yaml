AWSTemplateFormatVersion: "2010-09-09"
Mappings:
  RegionMap:
    eu-central-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    us-east-1:
      AMI: ami-0ea0f37840b2f2b19
    us-gov-east-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    us-gov-west-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    us-east-2:
      AMI: ami-xxxxxxxxxxxxxxxxx
    us-west-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    us-west-2:
      AMI: ami-xxxxxxxxxxxxxxxxx
    ca-central-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    eu-central-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    eu-west-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    eu-west-2:
      AMI: ami-xxxxxxxxxxxxxxxxx
    eu-west-3:
      AMI: ami-xxxxxxxxxxxxxxxxx
    eu-north-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    eu-south-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    ap-east-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    ap-southeast-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    ap-southeast-2:
      AMI: ami-xxxxxxxxxxxxxxxxx
    ap-south-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    ap-northeast-1:
      AMI: ami-xxxxxxxxxxxxxxxxx
    ap-northeast-2:
      AMI: ami-xxxxxxxxxxxxxxxxx
    me-south-1:
      AMI: ami-xxxxxxxxxxxxxxxxx 
Description: ""
Parameters:
  AppName:
    Description: Name of the application the cluster will serve
    Type: String
    MinLength: "3"
    AllowedPattern: '[a-zA-Z0-9\(\)\.\-/_]+'
    Default: "MicroK8s"
  KeyPair:
    Description: Amazon EC2 Key Pair used to ssh to the cluster nodes
    Type: "AWS::EC2::KeyPair::KeyName"
  InstanceTypeParameter:
    Type: String
    Default: m4.large
    AllowedValues:
      - c1.xlarge
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5.metal
      - c5a.large
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c5a.12xlarge
      - c5a.16xlarge
      - c5a.24xlarge
      - c5ad.large
      - c5ad.xlarge
      - c5ad.2xlarge
      - c5ad.4xlarge
      - c5ad.8xlarge
      - c5ad.12xlarge
      - c5ad.16xlarge
      - c5ad.24xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.12xlarge
      - c5d.18xlarge
      - c5d.24xlarge
      - c5d.metal
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
      - c5n.metal
      - c6i.large
      - c6i.xlarge
      - c6i.2xlarge
      - c6i.4xlarge
      - c6i.8xlarge
      - c6i.12xlarge
      - c6i.24xlarge
      - c6i.32xlarge
      - c6i.metal
      - c6id.large
      - c6id.xlarge
      - c6id.2xlarge
      - c6id.4xlarge
      - c6id.8xlarge
      - c6id.12xlarge
      - c6id.16xlarge
      - c6id.24xlarge
      - c6id.32xlarge
      - c6id.metal
      - cc2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - d3.xlarge
      - d3.2xlarge
      - d3.4xlarge
      - d3.8xlarge
      - d3en.xlarge
      - d3en.2xlarge
      - d3en.4xlarge
      - d3en.6xlarge
      - d3en.8xlarge
      - d3en.12xlarge
      - dl1.24xlarge
      - f1.2xlarge
      - f1.4xlarge
      - f1.16xlarge
      - g2.2xlarge
      - g2.8xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3.16xlarge
      - g3s.xlarge
      - g4ad.xlarge
      - g4ad.2xlarge
      - g4ad.4xlarge
      - g4ad.8xlarge
      - g4ad.16xlarge
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.12xlarge
      - g4dn.16xlarge
      - g4dn.metal
      - g5.xlarge
      - g5.2xlarge
      - g5.4xlarge
      - g5.8xlarge
      - g5.12xlarge
      - g5.16xlarge
      - g5.24xlarge
      - g5.48xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - i3.metal
      - i3en.large
      - i3en.xlarge
      - i3en.2xlarge
      - i3en.3xlarge
      - i3en.6xlarge
      - i3en.12xlarge
      - i3en.24xlarge
      - i3en.metal
      - inf1.xlarge
      - inf1.2xlarge
      - inf1.6xlarge
      - inf1.24xlarge
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - m5ad.large
      - m5ad.xlarge
      - m5ad.2xlarge
      - m5ad.4xlarge
      - m5ad.8xlarge
      - m5ad.12xlarge
      - m5ad.16xlarge
      - m5ad.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.12xlarge
      - m5d.16xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5dn.large
      - m5dn.xlarge
      - m5dn.2xlarge
      - m5dn.4xlarge
      - m5dn.8xlarge
      - m5dn.12xlarge
      - m5dn.16xlarge
      - m5dn.24xlarge
      - m5dn.metal
      - m5n.large
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.12xlarge
      - m5n.16xlarge
      - m5n.24xlarge
      - m5n.metal
      - m5zn.large
      - m5zn.xlarge
      - m5zn.2xlarge
      - m5zn.3xlarge
      - m5zn.6xlarge
      - m5zn.12xlarge
      - m5zn.metal
      - m6a.large
      - m6a.xlarge
      - m6a.2xlarge
      - m6a.4xlarge
      - m6a.8xlarge
      - m6a.12xlarge
      - m6a.16xlarge
      - m6a.24xlarge
      - m6a.32xlarge
      - m6a.48xlarge
      - m6i.large
      - m6i.xlarge
      - m6i.2xlarge
      - m6i.4xlarge
      - m6i.8xlarge
      - m6i.12xlarge
      - m6i.16xlarge
      - m6i.24xlarge
      - m6i.32xlarge
      - m6i.metal
      - m6id.large
      - m6id.xlarge
      - m6id.2xlarge
      - m6id.4xlarge
      - m6id.8xlarge
      - m6id.12xlarge
      - m6id.16xlarge
      - m6id.24xlarge
      - m6id.32xlarge
      - m6id.metal
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - p3dn.24xlarge
      - p4d.24xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
      - r5.metal
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.8xlarge
      - r5a.12xlarge
      - r5a.16xlarge
      - r5a.24xlarge
      - r5ad.large
      - r5ad.xlarge
      - r5ad.2xlarge
      - r5ad.4xlarge
      - r5ad.8xlarge
      - r5ad.12xlarge
      - r5ad.16xlarge
      - r5ad.24xlarge
      - r5b.large
      - r5b.xlarge
      - r5b.2xlarge
      - r5b.4xlarge
      - r5b.8xlarge
      - r5b.12xlarge
      - r5b.16xlarge
      - r5b.24xlarge
      - r5b.metal
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.8xlarge
      - r5d.12xlarge
      - r5d.16xlarge
      - r5d.24xlarge
      - r5d.metal
      - r5dn.large
      - r5dn.xlarge
      - r5dn.2xlarge
      - r5dn.4xlarge
      - r5dn.8xlarge
      - r5dn.12xlarge
      - r5dn.16xlarge
      - r5dn.24xlarge
      - r5dn.metal
      - r5n.large
      - r5n.xlarge
      - r5n.2xlarge
      - r5n.4xlarge
      - r5n.8xlarge
      - r5n.12xlarge
      - r5n.16xlarge
      - r5n.24xlarge
      - r5n.metal
      - r6i.large
      - r6i.xlarge
      - r6i.2xlarge
      - r6i.4xlarge
      - r6i.8xlarge
      - r6i.12xlarge
      - r6i.24xlarge
      - r6i.32xlarge
      - r6i.metal
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - u-12tb1.112xlarge
      - u-6tb1.56xlarge
      - u-6tb1.112xlarge
      - u-9tb1.112xlarge
      - vt1.3xlarge
      - vt1.6xlarge
      - vt1.24xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - x2idn.16xlarge
      - x2idn.24xlarge
      - x2idn.32xlarge
      - x2iedn.xlarge
      - x2iedn.2xlarge
      - x2iedn.4xlarge
      - x2iedn.8xlarge
      - x2iedn.16xlarge
      - x2iedn.24xlarge
      - x2iedn.32xlarge
      - x2iezn.2xlarge
      - x2iezn.4xlarge
      - x2iezn.6xlarge
      - x2iezn.8xlarge
      - x2iezn.12xlarge
      - x2iezn.metal
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
      - z1d.metal
    Description: Select the instance type of the cluster nodes
  KubernetesVersion:
    Type: String
    Default: 1.26
    AllowedValues:
      - 1.26
      - 1.25
      - 1.24
      - 1.23
    Description: The Kubernetes version
  VPC:
    Description: Amazon VPC to deploy the cluster on
    Type: "AWS::EC2::VPC::Id"
  SubNets:
    Description: List of subnets that should be from the specified VPC to deploy the cluster on
    Type: "List<AWS::EC2::Subnet::Id>"
  AllowSSH:
    Description: Should SSH access over port 22 be allowed for nodes?
    Default: false
    Type: String
    AllowedValues: [true, false]
  AllowSSHCidr:
    Type: String
    Description: Please set CIDR to x.x.x.x/32 to allow one specific IP address access, 0.0.0.0/0 to allow all IP addresses access, or another CIDR range
Conditions:
  ShouldAllowSSH:
    !Equals [true, !Ref AllowSSH]
Resources:
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - !If
          - ShouldAllowSSH
          - Description: "SSH"
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: !Ref AllowSSHCidr
          - !Ref AWS::NoValue
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
  SQSQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      DelaySeconds: "0"
      MaximumMessageSize: "262144"
      MessageRetentionPeriod: "345600"
      ReceiveMessageWaitTimeSeconds: "0"
      VisibilityTimeout: "30"
      QueueName: !Sub "${AppName}"
  SQSQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      PolicyDocument:
        Version: "2008-10-17"
        Id: SQS-Policy-1
        Statement:
          - Sid: !Sub "${AppName}-SQS-1"
            Effect: Allow
            Principal:
              AWS: !Sub "${AWS::AccountId}"
            Action:
              - "sqs:*"
            Resource: !Sub "${SQSQueue.QueueName}"
          - Sid: !Sub "${AppName}-SQS-2"
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - SQS:SendMessage
            Resource: !GetAtt
              - SQSQueue
              - Arn
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${SNSTopic.TopicName}"
      Queues:
        - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue.QueueName}"
    DependsOn: "SQSQueue"
  SNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "Foo"
      TopicName: !Sub "${AppName}"
  SNSSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${SNSTopic.TopicName}"
      Endpoint: !GetAtt
        - SQSQueue
        - Arn
      Protocol: "sqs"
      RawMessageDelivery: "false"
      Region: !Ref AWS::Region
    DependsOn: "SNSTopic"
  SNSTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Version: "2008-10-17"
        Id: SNSSubscriptionPolicy
        Statement:
          - Sid: SNSSubscriptionPolicySid
            Effect: Allow
            Principal:
              AWS: !Sub "${AWS::AccountId}"
            Action:
              - SNS:GetTopicAttributes
              - SNS:SetTopicAttributes
              - SNS:AddPermission
              - SNS:RemovePermission
              - SNS:DeleteTopic
              - SNS:Subscribe
              - SNS:ListSubscriptionsByTopic
              - SNS:Publish
              - SNS:Receive
            Resource: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${SNSTopic.TopicName}"
            Condition:
              StringEquals:
                AWS:SourceOwner: !Sub "${AWS::AccountId}"
      Topics:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${SNSTopic.TopicName}"
    DependsOn: [SNSTopic]
  EC2LaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateName: !Sub "${AppName}"
      LaunchTemplateData:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash

            snap refresh joule-expansion --classic
            snap refresh microk8s --classic --channel=${KubernetesVersion}/stable
            usermod -a -G microk8s ubuntu
            mkdir /home/ubuntu/.kube
            chown -f -R ubuntu /home/ubuntu/.kube
            snap set joule-expansion provider=aws
            snap set joule-expansion applications=microk8s
        BlockDeviceMappings:
          - DeviceName: "/dev/sda1"
            Ebs:
              Encrypted: false
              DeleteOnTermination: true
              VolumeSize: 100
              VolumeType: "gp2"
        IamInstanceProfile:
          Arn: !GetAtt
            - InstanceProfile
            - Arn
        EbsOptimized: false
        KeyName: !Sub "${KeyPair}"
        DisableApiTermination: false
        ImageId: !FindInMap
          - RegionMap
          - !Ref AWS::Region
          - AMI
        InstanceType: !Sub "${InstanceTypeParameter}"
        SecurityGroupIds:
        - !GetAtt 'NodeSecurityGroup.GroupId'
  AutoScalingAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AutoScalingGroupName: !Sub "${AppName}"
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: 1
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      Cooldown: 300
      VPCZoneIdentifier: !Ref SubNets
      HealthCheckType: "EC2"
      HealthCheckGracePeriod: 300
      TerminationPolicies:
        - "NewestInstance"
      ServiceLinkedRoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling_${AppName}"
      NewInstancesProtectedFromScaleIn: false
      NotificationConfigurations:
        - NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
          TopicARN: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${SNSTopic.TopicName}"
    DependsOn:
      - EC2LaunchTemplate
      - SNSTopic
      - AutoScalingRole
      - NodeSecurityGroup
  AutoScalingScalingPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: !Sub "${AppName}"
      PolicyType: "SimpleScaling"
      AdjustmentType: "ChangeInCapacity"
      ScalingAdjustment: 1
    DependsOn: "AutoScalingAutoScalingGroup"
  AutoScalingRole:
    Type: "AWS::IAM::ServiceLinkedRole"
    Properties:
      AWSServiceName: autoscaling.amazonaws.com
      Description: AutoScaling ServiceLinked Role
      CustomSuffix: !Sub "${AppName}"
  EC2Role:
    Type: "AWS::IAM::Role"
    Properties:
      Description: !Sub "${AppName} Role"
      RoleName: !Sub "${AppName}-EC2Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: autoscaling:DescribeAutoScalingGroups
                Effect: Allow
                Resource: "*"
              - Action: autoscaling:DescribeAutoScalingInstances
                Effect: Allow
                Resource: "*"
              - Action: autoscaling:SetInstanceProtection
                Effect: Allow
                Resource: !Sub "arn:*:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/${AppName}"
              - Action: ec2:CreateTags
                Effect: Allow
                Resource: "arn:*:ec2:*:*:instance/*"
              - Action: ec2:DescribeTags
                Effect: Allow
                Resource: "*"
              - Action: sqs:ListQueues
                Effect: Allow
                Resource: "*"
              - Action: sqs:GetQueueUrl
                Effect: Allow
                Resource: "*"
              - Action: sqs:ReceiveMessage
                Effect: Allow
                Resource: !Sub "arn:*:sqs:*:*:${AppName}"
              - Action: sqs:DeleteMessage
                Effect: Allow
                Resource: !Sub "arn:*:sqs:*:*:${AppName}"
              - Action: sqs:SendMessage
                Effect: Allow
                Resource: !Sub "arn:*:sqs:*:*:${AppName}"
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
                - lambda.amazonaws.com
                - ec2.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: autoscaling:DescribeAutoScalingGroups
                Effect: Allow
                Resource: "*"
              - Action: autoscaling:DescribeAutoScalingInstances
                Effect: Allow
                Resource: "*"
              - Action: ec2:CreateTags
                Effect: Allow
                Resource: "arn:*:ec2:*:*:instance/*"
    Metadata:
      aws:cdk:path: aws-instance-scheduler/SchedulerRole/Resource
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: "EC2Role"
    Properties:
      InstanceProfileName: !Sub "${AppName}-InstanceProfile"
      Roles:
        - !Ref EC2Role
  LeaderNodeTagger:
    Type: AWS::Lambda::Function
    DependsOn:
      - "AutoScalingAutoScalingGroup"
      - "LambdaRole"
    Properties:
      Handler: "index.lambda_handler"
      Role: !GetAtt LambdaRole.Arn
      Runtime: "python3.8"
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          import json


          def get_first_instance():
              client = boto3.client('autoscaling')
              return client.describe_auto_scaling_groups() \
                  ["AutoScalingGroups"][0]["Instances"][0]


          def lambda_handler(event, context):
              first_instance = get_first_instance()
              response = boto3.client("ec2").create_tags(
                  Resources=[first_instance["InstanceId"]],
                  Tags=[
                      {"Key": "joule:enrolled", "Value": "1"}
                  ],
              )
              cfnresponse.send(event, context, cfnresponse.SUCCESS, {}, "CustomResourcePhysicalID")
              return {
                  'statusCode': 200,
                  'body': first_instance["InstanceId"].strip()
              }
  LeaderNodeTaggerTrigger:
    Type: AWS::CloudFormation::CustomResource
    DependsOn: LeaderNodeTagger
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt LeaderNodeTagger.Arn
